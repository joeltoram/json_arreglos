{"version":3,"sources":["arreglos.js"],"names":["mixedTypedArray","salad","salad2","Array","element","array","index","salad3","len","length","salad4","push","salad5","unshift","salad6","pop","console","log","ensalada","shift","ensalada1","ensalada1Copy","slice","isArray","tomate","hongo","zanahoria"],"mappings":";;AAAA,IAAMA,eAAe,GAAG,CAAC,GAAD,EAAM,IAAN,EAAY,cAAZ,EAA4B,EAA5B,CAAxB;AAEA,IAAMC,KAAK,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,CAAd;AACA,IAAMC,MAAM,GAAG,IAAIC,KAAJ,CAAU,IAAV,EAAgB,IAAhB,EAAsB,IAAtB,EAA4B,IAA5B,EAAkC,IAAlC,EAAwC,IAAxC,EAA8C,IAA9C,CAAf;AAEA,IAAMC,OAAO,GAAGC,KAAK,CAACC,KAAD,CAArB;AAEA,IAAMC,MAAM,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,CAAf;AACA,IAAMC,GAAG,GAAGD,MAAM,CAACE,MAAnB;AACAF,MAAM,CAACC,GAAG,GAAG,CAAP,CAAN,C,CAAiB;;AACjBD,MAAM,CAACC,GAAG,GAAG,CAAP,CAAN,C,CAAiB;AAGjB;;AACA,IAAME,MAAM,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,CAAf;AACAA,MAAM,CAACC,IAAP,CAAY,IAAZ,E,CAEA;;AACA,IAAMC,MAAM,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,CAAf;AACAA,MAAM,CAACC,OAAP,CAAe,IAAf,E,CAEA;;AACA,IAAMC,MAAM,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,CAAf;AACAA,MAAM,CAACC,GAAP,G,CAAc;;AAEdC,OAAO,CAACC,GAAR,CAAYH,MAAZ,E,CAAqB;AAErB;;AAEA,IAAMI,QAAQ,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,CAAjB;AACAjB,KAAK,CAACkB,KAAN,G,CAAe;;AAEfH,OAAO,CAACC,GAAR,CAAYC,QAAZ,E,CAAuB;AAEvB;;AACA,IAAME,SAAS,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,CAAlB;AACA,IAAMC,aAAa,GAAGD,SAAS,CAACE,KAAV,EAAtB;AAEAN,OAAO,CAACC,GAAR,CAAYI,aAAZ,E,CAA4B;;AAE5BD,SAAS,KAAKC,aAAd,C,CAA6B;AAG7B;;AACAlB,KAAK,CAACoB,OAAN,CAAc,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,CAAd,E,CAA2D;;AAC3DpB,KAAK,CAACoB,OAAN,CAAc,IAAd,E,CAAqB;;AACrBpB,KAAK,CAACoB,OAAN,CAAc;AAAE,YAAU;AAAZ,CAAd,E,CAAkC;;AAClCpB,KAAK,CAACoB,OAAN,CAAc,EAAd,E,CAAmB;AAEnB;;IACKC,M,GAA6B,I;IAArBC,K,GAA2B,I;IAApBC,S,GAA0B,I;AAE9CV,OAAO,CAACC,GAAR,CAAYO,MAAZ,EAAoBC,KAApB,EAA2BC,SAA3B,E,CAAuC","sourcesContent":["const mixedTypedArray = [100, true, 'freeCodeCamp', {}];\r\n\r\nconst salad = ['🍅', '🍄', '🥦', '🥒', '🌽', '🥕', '🥑'];\r\nconst salad2 = new Array('🍅', '🍄', '🥦', '🥒', '🌽', '🥕', '🥑');\r\n\r\nconst element = array[index];\r\n\r\nconst salad3 = ['🍅', '🍄', '🥦', '🥒', '🌽', '🥕', '🥑'];\r\nconst len = salad3.length;\r\nsalad3[len - 1]; // '🥑'\r\nsalad3[len - 3]; // '🌽'\r\n\r\n\r\n//Añadir un elemento al final del arreglo\r\nconst salad4 = ['🍅', '🍄', '🥦', '🥒', '🌽', '🥕', '🥑'];\r\nsalad4.push('🥜');\r\n\r\n//Añadir un elemeto al princio del arreglo\r\nconst salad5 = ['🍅', '🍄', '🥦', '🥒', '🌽', '🥕', '🥑'];\r\nsalad5.unshift('🥜');\r\n\r\n//Eliminar un elemento del arreglo al final\r\nconst salad6 = ['🍅', '🍄', '🥦', '🥒', '🌽', '🥕', '🥑'];\r\nsalad6.pop(); // 🥑\r\n\r\nconsole.log(salad6); // ['🍅', '🍄', '🥦', '🥒', '🌽', '🥕']\r\n\r\n//ELiminar un elemento al princio del arreglo\r\n\r\nconst ensalada = ['🍅', '🍄', '🥦', '🥒', '🌽', '🥕', '🥑'];\r\nsalad.shift(); // 🍅\r\n\r\nconsole.log(ensalada); // ['🍄', '🥦', '🥒', '🌽', '🥕', '🥑'];\r\n\r\n//Clonar un arreglo:\r\nconst ensalada1 = ['🍅', '🍄', '🥦', '🥒', '🌽', '🥕', '🥑'];\r\nconst ensalada1Copy = ensalada1.slice();\r\n\r\nconsole.log(ensalada1Copy); // ['🍅', '🍄', '🥦', '🥒', '🌽', '🥕', '🥑']\r\n\r\nensalada1 === ensalada1Copy; // returns false\r\n\r\n\r\n//Determinar si el valor es un arreglo\r\nArray.isArray(['🍅', '🍄', '🥦', '🥒', '🌽', '🥕', '🥑']); // returns true\r\nArray.isArray('🍅'); // returns false\r\nArray.isArray({ 'tomate': '🍅'}); // returns false\r\nArray.isArray([]); // returns true\r\n\r\n//Destructuración de arreglos\r\nlet [tomate, hongo, zanahoria] = ['🍅', '🍄', '🥕'];\r\n\r\nconsole.log(tomate, hongo, zanahoria); // Output, 🍅 🍄 🥕\r\n\r\n\r\n\r\n"],"file":"arreglos.dev.js"}